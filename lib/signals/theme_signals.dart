import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:signals/signals.dart';

final Signal<ThemeMode> sThemeMode = Signal<ThemeMode>(
  ThemeMode.light,
  debugLabel: 'sThemeMode',
);

final Signal<FlexScheme> sThemeColor = Signal<FlexScheme>(
  FlexScheme.money,
  debugLabel: 'sThemeColor',
);

final Signal<String> sThemeFont = Signal<String>(
  GoogleFonts.barlow().fontFamily!,
  debugLabel: 'sThemeFont',
);

final Computed<ThemeData> cThemeData = Computed<ThemeData>(() {
  if (sThemeMode.value == ThemeMode.light) {
    return FlexThemeData.light(
      scheme: sThemeColor.value,
      surfaceMode: FlexSurfaceMode.levelSurfacesLowScaffold,
      blendLevel: 7,
      subThemesData: const FlexSubThemesData(
        blendOnLevel: 10,
        blendOnColors: false,
        blendTextTheme: true,
        useTextTheme: true,
        useM2StyleDividerInM3: true,
        thinBorderWidth: 2.0,
        thickBorderWidth: 4.0,
        defaultRadius: 24.0,
        toggleButtonsSchemeColor: SchemeColor.primary,
        toggleButtonsUnselectedSchemeColor: SchemeColor.outline,
        switchSchemeColor: SchemeColor.primary,
        checkboxSchemeColor: SchemeColor.primary,
        radioSchemeColor: SchemeColor.primary,
        unselectedToggleIsColored: true,
        sliderBaseSchemeColor: SchemeColor.primary,
        sliderIndicatorSchemeColor: SchemeColor.primary,
        sliderValueTinted: true,
        inputDecoratorBorderType: FlexInputBorderType.underline,
        fabSchemeColor: SchemeColor.primary,
        popupMenuRadius: 8.0,
        snackBarRadius: 24,
        snackBarElevation: 3,
        tabBarItemSchemeColor: SchemeColor.primary,
        tabBarUnselectedItemSchemeColor: SchemeColor.outline,
        tabBarIndicatorSchemeColor: SchemeColor.primary,
        tabBarIndicatorWeight: 4,
        tabBarIndicatorTopRadius: 8,
        drawerWidth: 300.0,
        drawerSelectedItemSchemeColor: SchemeColor.primary,
        drawerUnselectedItemSchemeColor: SchemeColor.outline,
        bottomSheetElevation: 3.0,
        bottomSheetModalElevation: 3.0,
        bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.primary,
        bottomNavigationBarUnselectedLabelSchemeColor: SchemeColor.outline,
        bottomNavigationBarSelectedIconSchemeColor: SchemeColor.primary,
        bottomNavigationBarUnselectedIconSchemeColor: SchemeColor.outline,
        menuRadius: 8.0,
        menuPadding: EdgeInsetsDirectional.fromSTEB(2, 2, 2, 2),
        menuBarRadius: 8.0,
        menuIndicatorRadius: 8.0,
        navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
        navigationBarUnselectedLabelSchemeColor: SchemeColor.outline,
        navigationBarSelectedIconSchemeColor: SchemeColor.primary,
        navigationBarUnselectedIconSchemeColor: SchemeColor.outline,
        navigationBarHeight: 40.0,
        navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
        navigationRailUnselectedLabelSchemeColor: SchemeColor.outline,
        navigationRailSelectedIconSchemeColor: SchemeColor.primary,
        navigationRailUnselectedIconSchemeColor: SchemeColor.outline,
        navigationRailIndicatorSchemeColor: SchemeColor.primary,
      ),
      useMaterial3ErrorColors: true,
      visualDensity: FlexColorScheme.comfortablePlatformDensity,
      useMaterial3: true,
      swapLegacyOnMaterial3: true,
      fontFamily: sThemeFont.value,
    );
  } else {
    return FlexThemeData.dark(
      scheme: sThemeColor.value,
      surfaceMode: FlexSurfaceMode.highScaffoldLowSurface,
      blendLevel: 20,
      subThemesData: const FlexSubThemesData(
        blendOnLevel: 20,
        blendTextTheme: true,
        useTextTheme: true,
        useM2StyleDividerInM3: true,
        defaultRadius: 24.0,
        thinBorderWidth: 2.0,
        thickBorderWidth: 4.0,
        toggleButtonsSchemeColor: SchemeColor.primary,
        toggleButtonsUnselectedSchemeColor: SchemeColor.outline,
        switchSchemeColor: SchemeColor.primary,
        checkboxSchemeColor: SchemeColor.primary,
        radioSchemeColor: SchemeColor.primary,
        unselectedToggleIsColored: true,
        sliderBaseSchemeColor: SchemeColor.primary,
        sliderIndicatorSchemeColor: SchemeColor.primary,
        sliderValueTinted: true,
        inputDecoratorBorderType: FlexInputBorderType.underline,
        fabSchemeColor: SchemeColor.primary,
        popupMenuRadius: 8.0,
        snackBarRadius: 24,
        snackBarElevation: 3,
        tabBarItemSchemeColor: SchemeColor.primary,
        tabBarUnselectedItemSchemeColor: SchemeColor.outline,
        tabBarIndicatorSchemeColor: SchemeColor.primary,
        tabBarIndicatorWeight: 4,
        tabBarIndicatorTopRadius: 8,
        drawerWidth: 300.0,
        drawerSelectedItemSchemeColor: SchemeColor.primary,
        drawerUnselectedItemSchemeColor: SchemeColor.outline,
        bottomSheetElevation: 3.0,
        bottomSheetModalElevation: 3.0,
        bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.primary,
        bottomNavigationBarUnselectedLabelSchemeColor: SchemeColor.outline,
        bottomNavigationBarSelectedIconSchemeColor: SchemeColor.primary,
        bottomNavigationBarUnselectedIconSchemeColor: SchemeColor.outline,
        menuRadius: 8.0,
        menuPadding: EdgeInsetsDirectional.fromSTEB(2, 2, 2, 2),
        menuBarRadius: 8.0,
        menuIndicatorRadius: 8.0,
        navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
        navigationBarUnselectedLabelSchemeColor: SchemeColor.outline,
        navigationBarSelectedIconSchemeColor: SchemeColor.primary,
        navigationBarUnselectedIconSchemeColor: SchemeColor.outline,
        navigationBarHeight: 40.0,
        navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
        navigationRailUnselectedLabelSchemeColor: SchemeColor.outline,
        navigationRailSelectedIconSchemeColor: SchemeColor.primary,
        navigationRailUnselectedIconSchemeColor: SchemeColor.outline,
        navigationRailIndicatorSchemeColor: SchemeColor.primary,
      ),
      useMaterial3ErrorColors: true,
      visualDensity: FlexColorScheme.comfortablePlatformDensity,
      useMaterial3: true,
      swapLegacyOnMaterial3: true,
      fontFamily: sThemeFont.value,
    );
  }
});
